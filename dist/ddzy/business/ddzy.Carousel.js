var Carousel=function(t){var e={};function n(r){if(e[r])return e[r].exports;var i=e[r]={i:r,l:!1,exports:{}};return t[r].call(i.exports,i,i.exports,n),i.l=!0,i.exports}return n.m=t,n.c=e,n.d=function(t,e,r){n.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:r})},n.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},n.t=function(t,e){if(1&e&&(t=n(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var i in t)n.d(r,i,function(e){return t[e]}.bind(null,i));return r},n.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return n.d(e,"a",e),e},n.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},n.p="",n(n.s=1)}([function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var r={getEle:function(t){return document.querySelector(t)},getAllEle:function(t){return document.querySelectorAll(t)},setAttr:function(t,e){for(var n in e)t.setAttribute(n,e[n]);return this},setCss:function(t,e){for(var n in e)if(e.hasOwnProperty(n)){var r=e[n];t.style.cssText+=n+": "+r+";"}return this},getFullRandom:function(t,e){return~~(Math.random()*(e-t)+t)},getAnyRandom:function(t,e){return Math.random()*(e-t)+t},getRadian:function(t){return Math.PI/180*t},getAttr:function(t,e){return t.getAttribute(e)},addClass:function(t,e){return t&&t.classList.add(e),this},removeClass:function(t,e){return t&&t.classList.remove(e),this},throttle:function(t,e){var n=Date.now();return function(){for(var r=[],i=0;i<arguments.length;i++)r[i]=arguments[i];var o=Date.now();o-n>t&&(e.apply(globalThis,r),n=o)}},isDOM:function(t){return t&&"object"==typeof t&&1===t.nodeType},isFunction:function(t){return"function"==typeof t},traversalDOMWithBFS:function(t,e){if(!this.isDOM(t))throw new TypeError("Require a DOM element");for(var n=[t];n.length;){var r=n.shift();e&&e(r);var i=r.children;n.push.apply(n,Array.from(i))}},traversalDOMWithDFS:function(t,e){if(!this.isDOM(t))throw new TypeError("Require a DOM element");e&&e(t),function t(n){if(0===n.length)return;for(var r=0,i=void 0;i=n[r++];)e&&e(i),t(i.children)}(t.children)},traversalDOMWithNodeIterator:function(t,e){if(!this.isDOM(t))throw new TypeError("Require a DOM element");for(var n=document.createNodeIterator(t,NodeFilter.SHOW_ELEMENT),r=null;r=n.nextNode();)e&&e(r)},traversalDOMWithTreeWalker:function(t,e){if(!this.isDOM(t))throw new TypeError("Require a DOM element");for(var n=document.createTreeWalker(t,NodeFilter.SHOW_ELEMENT),r=null;r=n.nextNode();)e&&e(r)}};e.default=r},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var r=n(2);e.default=r.Carousel},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var r=n(3),i=n(4),o=function(){function t(t){this.__init(t)}return t.prototype.__init=function(t){this.__initWhichEffect(t)},t.prototype.__initWhichEffect=function(t){switch(t.effect){case"scroll":return void new r.Scroll(t);case"fade":return void new i.Fade(t);default:return void new r.Scroll(t)}},t}();e.Carousel=o},function(t,e,n){"use strict";var r=this&&this.__importDefault||function(t){return t&&t.__esModule?t:{default:t}};Object.defineProperty(e,"__esModule",{value:!0});var i=r(n(0)),o=function(){function t(t){this.timer=0,this.count=1,this.oList=null,this.oDotsItem=null,this.oListItem=null,this.oPrevArrow=null,this.oNextArrow=null,this.oListWidth=0,this.oItemLength=0,this.oItemWidth=0,this.initSettings(t),this.initDOM()}return t._aidedAutoScroll=function(e,n,r,o){i.default.setCss(n,{transition:"all "+t.defaultConfig.duringTime+"s "+t.defaultConfig.easing+"; ",transform:"translateX(-"+r/o*(e+1)+"px)"})},t._aidedChangeDotsStyle=function(t,e,n){for(var r=0,o=void 0;o=n[r++];)i.default.removeClass(o,"yyg-dot-item-active");t===e-1?i.default.addClass(n[0],"yyg-dot-item-active"):1==++t?i.default.addClass(n[e-3],"yyg-dot-item-active"):i.default.addClass(n[t-2],"yyg-dot-item-active")},t.prototype.initSettings=function(e){for(var n in e)if(e.hasOwnProperty(n)){var r=Reflect.get(e,n);Reflect.set(t.defaultConfig,n,r)}},t.prototype.initDOM=function(){var e=i.default.getEle(t.defaultConfig.container);if(e){var n=document.createElement("div");n.innerHTML=this.createDOMTree(),e.appendChild(n),this.createStyle(),this.initCommonEle(),t.defaultConfig.autoPlay&&this.handleAutoScroll(),t.defaultConfig.isHoverPause&&this.handleImgHover(),t.defaultConfig.showDots&&this.handleDotsHover(),t.defaultConfig.showArrows&&this.handleArrowClick(),t.defaultConfig.showArrows&&this.handleArrowHover()}},t.prototype.initCommonEle=function(){this.oList=i.default.getEle(".yyg-content-list"),this.oListWidth=this.oList.offsetWidth,this.oDotsItem=i.default.getAllEle(".yyg-dot-item"),this.oListItem=i.default.getAllEle(".yyg-content-item"),this.oPrevArrow=i.default.getEle(".yyg-arrow-prev-wrapper"),this.oNextArrow=i.default.getEle(".yyg-arrow-next-wrapper"),this.oItemLength=this.oListItem.length,this.oItemWidth=this.oListWidth/this.oItemLength},t.prototype.createDOMTree=function(){var e=t.defaultConfig.dataSource,n=t.defaultConfig,r=n.showArrows,i=n.showDots,o="",a="";return a+='\n      <li class="yyg-content-item" data-id='+e.length+">\n        "+(e[e.length-1].img.url?"<a\n                href="+e[e.length-1].img.target+"\n                ><img src="+e[e.length-1].img.url+' alt="图片提示" /></a>':e[e.length-1].text)+"\n      </li>\n    ",e.forEach(function(t,e){o+='\n        <span\n          class="yyg-dot-item'+(0===e?" yyg-dot-item-active":"")+'"\n          data-id='+(e+1)+"\n        ></span>\n      ",a+='\n        <li class="yyg-content-item" data-id='+(e+1)+">\n          "+(t.img.url?"<a\n                  href="+t.img.target+"\n                 ><img src="+t.img.url+' alt="图片提示" /></a>':t.text)+"\n        </li>\n      "}),'\n      <div class="yyg-carousel-container">\n        <div class="yyg-carousel-main">\n          <div class="yyg-content-wrapper">\n            <ul class="yyg-content-list">'+(a+='\n      <li class="yyg-content-item" data-id=1>\n        '+(e[0].img.url?"<a\n                href="+e[0].img.target+"\n                ><img src="+e[0].img.url+' alt="图片提示" /></a>':e[0].text)+"\n      </li>\n    ")+"</ul>\n          </div>\n          "+(r?'\n                <div class="yyg-arrow-wrapper yyg-arrow-prev-wrapper">\n                  <i class="yyg-arrow yyg-arrow-prev">&lt;</i>\n                </div>\n                <div class="yyg-arrow-wrapper yyg-arrow-next-wrapper">\n                  <i class="yyg-arrow yyg-arrow-next">&gt;</i>\n                </div>\n              ':"")+"\n          "+(i?'<div class="yyg-dots-wrapper">'+o+"</div>":"")+"\n        </div>\n      </div>\n    "},t.prototype.createStyle=function(){var e=i.default.getEle("style"),n=t.defaultConfig,r=n.dataSource,o=n.container;e||(e=document.createElement("style"),i.default.getEle("head").appendChild(e));e.innerText+="\n      "+o+" p, "+o+" ul {\n        margin: 0;\n        padding: 0;\n      }\n      "+o+" ul {\n        list-style-type: none;\n      }\n      "+o+" .yyg-carousel-container {\n        box-sizing: border-box;\n        height: 100%;\n        padding: 10px;\n        border: 5px solid #1890ff;\n        border-radius: 20px;\n      }\n      "+o+" .yyg-carousel-main {\n        position: relative;\n        height: 100%;\n      }\n      "+o+" .yyg-arrow-wrapper {\n        position: absolute;\n        z-index: 999;\n        top: 50%;\n        width: 30px;\n        heigth: 45px;\n        border-top-right-radius: 15px;\n        border-bottom-right-radius: 15px;\n        background-clip: padding-box;\n        background-color: rgba(0,0,0,.5);\n        color: #fff;\n        opacity: 0;\n        line-height: 45px;\n        font-size: 24px;\n        text-align: center;\n        cursor: pointer;\n        user-select: none;\n        transform: translateY(-50%);\n        transition: all .5s ease-in-out;\n      }\n      "+o+" .yyg-arrow-prev-wrapper {\n        left: -10px;\n      }\n      "+o+" .yyg-arrow-next-wrapper {\n        right: -10px;\n      }\n      "+o+" .yyg-content-wrapper {\n        overflow: hidden;\n        height: 100%;\n      }\n      "+o+" .yyg-content-list {\n        width: "+100*(r.length+2)+"%;\n        height: 100%;\n        // transition: all "+t.defaultConfig.duringTime+"s "+t.defaultConfig.easing+";\n        transform: translateX(-"+100/(r.length+2)+"%);\n      }\n      "+o+" .yyg-content-item {\n        float: left;\n        width: "+100/(r.length+2)+"%;\n        height: 100%;\n        text-align: center;\n      }\n      "+o+" .yyg-content-item a img {\n        display: block;\n        max-width: 100%;\n        // width: 100%;\n        height: 100%;\n        border-radius: 6px;\n      }\n      "+o+" .yyg-dots-wrapper {\n        display: none;\n        position: absolute;\n        left: 50%;\n        bottom: 10px;\n        padding: 2px 0;\n        border: 1px solid #ccc;\n        border-radius: 8px;\n        background-color: rgba(0,0,0,.5);\n        font-size: 0;\n        transform: translateX(-50%);\n      }\n      "+o+" .yyg-dot-item {\n        display: inline-block;\n        margin-left: 5px;\n        width: 12px;\n        height: 12px;\n        background-color: #fff;\n        border-radius: 50%;\n        transition: all .5s ease-in-out;\n      }\n      "+o+" .yyg-dot-item:last-child {\n        margin-right: 5px;\n      }\n      "+o+" .yyg-dot-item-active {\n        background-color: #d50;\n      }\n      "+o+" .yyg-prev-wrapper-active {\n        left: 15px;\n        opacity: 1;\n      }\n      "+o+" .yyg-next-wrapper-active {\n        right: 15px;\n        opacity: 1;\n      }\n    "},t.prototype.handleAutoScroll=function(){var e=this,n=this.oList,r=this.oItemLength,o=this.oDotsItem,a=this.oItemWidth,s=this.oListWidth;this.timer=setInterval(function(){t.defaultConfig.beforeChange&&t.defaultConfig.beforeChange(),t._aidedAutoScroll(e.count++,n,s,r),t._aidedChangeDotsStyle(e.count,r,o)},t.defaultConfig.delayTime),n.addEventListener("transitionend",function(){t.defaultConfig.afterChange&&t.defaultConfig.afterChange(),e.count>r&&(e.count=2,i.default.setCss(n,{transition:null,transform:"translateX("+-e.count*a+"px)"}))},!1)},t.prototype.handleImgHover=function(){var e=this,n=this.oListItem;for(var r in n)if(n.hasOwnProperty(r)){var i=n[r];i.addEventListener("mouseenter",function(){clearInterval(e.timer),e.aidedHandleArrowVisible(t.defaultConfig.showArrows)},!1),i.addEventListener("mouseleave",function(){e.handleAutoScroll(),e.aidedHandleArrowVisible(!1)},!1)}},t.prototype.handleDotsHover=function(){var e=this,n=this.oList,r=this.oItemWidth,o=this.oDotsItem,a=i.default.getEle(".yyg-dots-wrapper");i.default.setCss(a,{display:"block"});for(var s=function(a,s){s.addEventListener("mouseenter",function(){var a=i.default.getAttr(s,"data-id");clearInterval(e.timer),e.count=Number(a);for(var l=0,d=void 0;d=o[l++];)i.default.removeClass(d,"yyg-dot-item-active");i.default.addClass(s,"yyg-dot-item-active"),i.default.setCss(n,{transition:"all "+t.defaultConfig.duringTime+"s "+t.defaultConfig.easing+"; ",transform:"translateX("+-e.count*r+"px)"})}),s.addEventListener("mouseleave",function(){e.handleAutoScroll()})},l=0,d=void 0;d=o[l++];)s(0,d)},t.prototype.handleArrowClick=function(){var t=this,e=this.oList,n=this.oItemWidth,r=this.oItemLength,o=this.oPrevArrow,a=this.oNextArrow;o&&o.addEventListener("click",function(){t.aidedHandleArrowClick("left")},!1),a&&a.addEventListener("click",function(){t.aidedHandleArrowClick("right")},!1),e.addEventListener("transitionend",function(){0===t.count?t.count=r-2:t.count===r-1&&(t.count=1),i.default.setCss(e,{transition:"null",transform:"translateX("+-t.count*n+"px)"})},!1)},t.prototype.handleArrowHover=function(){var t=this,e=this.oPrevArrow,n=this.oNextArrow;e&&e.addEventListener("mouseenter",function(){t.aidedHandleArrowVisible(!0)},!1),n&&n.addEventListener("mouseenter",function(){t.aidedHandleArrowVisible(!0)},!1)},t.prototype.aidedHandleArrowClick=function(e){var n=this,r=this.oList,o=this.oDotsItem,a=this.oItemWidth,s=this.oItemLength;clearInterval(this.timer),i.default.throttle(t.MIN_CLICK_DELAY_TIME,function(){switch(e){case"left":n.count--;break;case"right":n.count++}i.default.setCss(r,{transition:"all "+t.defaultConfig.duringTime+"s "+t.defaultConfig.easing,transform:"translateX("+-n.count*a+"px)"}),t._aidedChangeDotsStyle(n.count,s,o)}),this.handleAutoScroll()},t.prototype.aidedHandleArrowVisible=function(t){var e=this.oPrevArrow,n=this.oNextArrow;t?(i.default.addClass(e,"yyg-prev-wrapper-active"),i.default.addClass(n,"yyg-next-wrapper-active")):(i.default.removeClass(e,"yyg-prev-wrapper-active"),i.default.removeClass(n,"yyg-next-wrapper-active"))},t.defaultConfig={container:"body",dataSource:[{text:"面板一",img:{url:"",target:""}},{text:"面板二",img:{url:"",target:""}},{text:"面板三",img:{url:"",target:""}},{text:"面板四",img:{url:"",target:""}}],autoPlay:!1,showDots:!1,showArrows:!1,easing:"ease-in-out",effect:"scroll",vertical:!1,duringTime:1.5,delayTime:3e3,isHoverPause:!0,beforeChange:function(){return null},afterChange:function(){return null}},t.MIN_CLICK_DELAY_TIME=1e3*t.defaultConfig.duringTime||1500,t}();e.Scroll=o},function(t,e,n){"use strict";var r=this&&this.__importDefault||function(t){return t&&t.__esModule?t:{default:t}};Object.defineProperty(e,"__esModule",{value:!0});var i=r(n(0)),o=function(){function t(t){this.oContentItem=null,this.oArrowWrapper=null,this.oPrevWrapper=null,this.oNextWrapper=null,this.oDotsItem=null,this.oContentItemLength=0,this.timer=0,this.count=0,this.init(t)}return t.prototype.init=function(t){this.initSettings(t),this.initDOM()},t.prototype.initSettings=function(e){for(var n in e)if(e.hasOwnProperty(n)){var r=Reflect.get(e,n);Reflect.set(t.defaultConfig,n,r)}},t.prototype.initDOM=function(){var e=t.defaultConfig,n=e.container,r=e.showArrows,o=e.showDots,a=e.autoPlay,s=i.default.getEle(n);if(s){var l=document.createElement("div");l.innerHTML=this.createDOM(),s.appendChild(l),this.createStyle(),this.initCommonEle(),a&&this.handleAutoPlay(),r&&this.handleArrowClick(),r&&this.handleImgHover(),o&&this.handleDotsHover()}},t.prototype.createDOM=function(){var e=t.defaultConfig.dataSource,n=t.defaultConfig,r=n.showArrows,i=n.showDots,o="",a="";return e.forEach(function(t,e){o+='\n        <span\n          class="yyg-dot-item'+(0===e?" yyg-dot-item-active":"")+'"\n          data-id='+(e+1)+"\n        ></span>\n      ",a+='\n        <li class="yyg-content-item" data-id='+(e+1)+">\n          "+(t.img.url?"<a\n                  href="+t.img.target+"\n                 ><img src="+t.img.url+' alt="图片提示" /></a>':t.text)+"\n        </li>\n      "}),'\n      <div class="yyg-carousel-container">\n        <div class="yyg-carousel-main">\n          <div class="yyg-content-wrapper">\n            <ul class="yyg-content-list">'+a+"</ul>\n          </div>\n          "+(r?'\n                <div class="yyg-arrow-wrapper yyg-arrow-prev-wrapper">\n                  <i class="yyg-arrow yyg-arrow-prev">&lt;</i>\n                </div>\n                <div class="yyg-arrow-wrapper yyg-arrow-next-wrapper">\n                  <i class="yyg-arrow yyg-arrow-next">&gt;</i>\n                </div>\n              ':"")+"\n          "+(i?'<div class="yyg-dots-wrapper">'+o+"</div>":"")+"\n        </div>\n      </div>\n    "},t.prototype.createStyle=function(){var e=i.default.getEle("style"),n=t.defaultConfig,r=(n.dataSource,n.container);e||(e=document.createElement("style"),i.default.getEle("head").appendChild(e));e.innerText+="\n      "+r+" ul, p {\n        margin: 0;\n        padding: 0;\n      }\n      "+r+" ul {\n        list-style-type: none;\n      }\n      "+r+" .yyg-carousel-container {\n        box-sizing: border-box;\n        height: 100%;\n        padding: 10px;\n        border: 5px solid #1890ff;\n        border-radius: 20px;\n      }\n      "+r+" .yyg-carousel-main {\n        position: relative;\n        // height: 100%;\n        height: 300px;\n      }\n      "+r+" .yyg-arrow-wrapper {\n        display: none;\n        position: absolute;\n        z-index: 999;\n        top: 50%;\n        width: 30px;\n        heigth: 45px;\n        border-top-right-radius: 15px;\n        border-bottom-right-radius: 15px;\n        background-clip: padding-box;\n        background-color: rgba(0,0,0,.5);\n        color: #fff;\n        opacity: 0;\n        line-height: 45px;\n        font-size: 24px;\n        text-align: center;\n        cursor: pointer;\n        user-select: none;\n        transform: translateY(-50%);\n        transition: all .5s ease-in-out;\n      }\n      "+r+" .yyg-arrow-prev-wrapper {\n        left: 0;\n      }\n      "+r+" .yyg-arrow-next-wrapper {\n        right: 0;\n      }\n      "+r+" .yyg-content-wrapper {\n        overflow: hidden;\n        height: 100%;\n      }\n      "+r+" .yyg-content-list {\n        position: relative;\n        height: 100%;\n      }\n      "+r+" .yyg-content-item {\n        position: absolute;\n        width: 100%;\n        height: 100%;\n        text-align: center;\n        opacity: 0;\n      }\n      "+r+" .yyg-content-item:first-child {\n        opacity: 1;\n        z-index: 0;\n      }\n      "+r+" .yyg-content-item a img {\n        display: block;\n        max-width: 100%;\n        height: 100%;\n        border-radius: 6px;\n      }\n      "+r+" .yyg-dots-wrapper {\n        position: absolute;\n        left: 50%;\n        bottom: 10px;\n        z-index: 888;\n        padding: 2px 0;\n        border: 1px solid #ccc;\n        border-radius: 8px;\n        background-color: rgba(0,0,0,.5);\n        font-size: 0;\n        transform: translateX(-50%);\n      }\n      "+r+" .yyg-dot-item {\n        display: inline-block;\n        margin-left: 5px;\n        width: 12px;\n        height: 12px;\n        background-color: #fff;\n        border-radius: 50%;\n        transition: all .5s ease-in-out;\n      }\n      "+r+" .yyg-dot-item:last-child {\n        margin-right: 5px;\n      }\n      "+r+" .yyg-dot-item-active {\n        background-color: #d50;\n      }\n      "+r+" .yyg-prev-wrapper-active {\n        left: 15px;\n        opacity: 1;\n      }\n      "+r+" .yyg-next-wrapper-active {\n        right: 15px;\n        opacity: 1;\n      }\n  "},t.prototype.initCommonEle=function(){this.oContentItem=i.default.getAllEle(".yyg-content-item"),this.oDotsItem=i.default.getAllEle(".yyg-dot-item"),this.oArrowWrapper=i.default.getAllEle(".yyg-arrow-wrapper"),this.oPrevWrapper=i.default.getEle(".yyg-arrow-prev-wrapper"),this.oNextWrapper=i.default.getEle(".yyg-arrow-next-wrapper"),this.oContentItemLength=this.oContentItem.length},t.prototype.handleAutoPlay=function(){var e=this,n=t.defaultConfig,r=n.delayTime,o=n.easing,a=n.duringTime,s=this.oContentItem,l=this.oDotsItem,d=this.oContentItemLength;this.timer=setInterval(function(){s.forEach(function(t,n){n===e.count?(i.default.setCss(t,{transition:"all "+a+"s "+o,"z-index":e.count+1,opacity:1}),l.forEach(function(t,n){n===e.count?i.default.addClass(t,"yyg-dot-item-active"):i.default.removeClass(t,"yyg-dot-item-active")})):i.default.setCss(t,{transition:"all "+a+"s "+o,"z-index":0,opacity:0})}),e.count++},r),s.forEach(function(t){t.addEventListener("transitionend",function(){e.count>d-1&&(e.count=0)},!1)})},t.prototype.handleArrowClick=function(){var t=this,e=this.oNextWrapper,n=this.oPrevWrapper;e.addEventListener("click",function(){t.aidedArrowClick("next")},!1),n.addEventListener("click",function(){t.aidedArrowClick("prev")},!1)},t.prototype.handleDotsHover=function(){var e=this,n=t.defaultConfig.showDots,r=this.oDotsItem;n&&r.forEach(function(t){var n=Number(i.default.getAttr(t,"data-id"));t.addEventListener("mouseenter",function(){clearInterval(e.timer),e.aidedSetDotAndImg(n-1)},!1),t.addEventListener("mouseleave",function(){e.count=n-1,e.handleAutoPlay()},!1)})},t.prototype.handleImgHover=function(){var t=this,e=this.oArrowWrapper,n=this.oContentItem,r=this.oPrevWrapper,o=this.oNextWrapper;e.forEach(function(t){i.default.setCss(t,{display:"block"}),t.addEventListener("mouseenter",function(){i.default.addClass(r,"yyg-prev-wrapper-active").addClass(o,"yyg-next-wrapper-active")},!1)}),n.forEach(function(e){e.addEventListener("mouseenter",function(){clearInterval(t.timer),i.default.addClass(r,"yyg-prev-wrapper-active").addClass(o,"yyg-next-wrapper-active")},!1),e.addEventListener("mouseleave",function(){i.default.removeClass(r,"yyg-prev-wrapper-active").removeClass(o,"yyg-next-wrapper-active"),t.handleAutoPlay()},!1)})},t.prototype.aidedArrowClick=function(t){var e=this.oContentItemLength;switch(clearInterval(this.timer),t){case"prev":this.count--,this.count=this.count<0?e-1:this.count;break;case"next":this.count++,this.count=this.count>e-1?0:this.count}this.aidedSetDotAndImg(this.count),this.handleAutoPlay()},t.prototype.aidedSetDotAndImg=function(e){var n=t.defaultConfig,r=n.duringTime,o=n.easing,a=this.oContentItem,s=this.oDotsItem;a.forEach(function(t,n){e===n?i.default.setCss(t,{transition:"all "+r+"s "+o,opacity:1,"z-index":n}).addClass(s[n],"yyg-dot-item-active"):i.default.setCss(t,{transition:"all "+r+"s "+o,opacity:0,"z-index":0}).removeClass(s[n],"yyg-dot-item-active")})},t.defaultConfig={container:"body",dataSource:[{text:"面板一",img:{url:"",target:""}},{text:"面板二",img:{url:"",target:""}},{text:"面板三",img:{url:"",target:""}},{text:"面板四",img:{url:"",target:""}}],autoPlay:!1,showDots:!1,showArrows:!1,easing:"ease-in-out",effect:"scroll",vertical:!1,duringTime:1.5,delayTime:3e3,isHoverPause:!0,beforeChange:function(){return null},afterChange:function(){return null}},t}();e.Fade=o}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,